name: CD

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v1
    - name: Setup Node.js 15.x
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
    - name: Install deps
      run: npm ci
    - name: Build jsonotron-interfaces
      run: |
        cd workspaces/jsonotron-interfaces
        npm run build
    - name: Test jsonotron-js
      run: |
        cd workspaces/jsonotron-js
        npm test
        npm run build
    - name: Test jsonotron-codegen
      run: |
        cd workspaces/jsonotron-codegen
        npm test
        npm run build
    - name: Test jss
      run: |
        cd workspaces/jss
        npm test
    - name: Test jsonoserve
      run: |
        cd workspaces/jsonoserve
        npm test
        npm run build
    - name: Test jsonocli
      run: |
        cd workspaces/jsonocli
        npm run build
        
  release:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Prepare Release
      id: prepare
      uses: karlhulme/github-action-prepare-release@master
      with:
        branchName: master
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Create GitHub Release
      if: steps.prepare.outputs.canRelease == 'yes'
      id: release
      uses: karlhulme/github-action-create-release@master
      with:
        branchName: master
        releaseVersion: ${{ steps.prepare.outputs.releaseVersion }}
        releaseNotes: ${{ steps.prepare.outputs.releaseNotes }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Clone repo
      if: steps.prepare.outputs.canRelease == 'yes'
      uses: actions/checkout@v1
      with:
        ref: v${{ steps.prepare.outputs.releaseVersion }}
    - name: Setup Node.js 15.x
      if: steps.prepare.outputs.canRelease == 'yes'
      uses: actions/setup-node@v1
      with:
        node-version: 15.x
        registry-url: https://registry.npmjs.org/
    - name: Install deps
      run: npm ci
    - name: Publish jsonotron-interfaces
      if: steps.prepare.outputs.canRelease == 'yes'
      run: |
        cd workspaces/jsonotron-interfaces
        npm version ${{ steps.prepare.outputs.releaseVersion }}
        npm run build
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.npm_token}}
    - name: Publish jsonotron-js
      if: steps.prepare.outputs.canRelease == 'yes'
      run: |
        cd workspaces/jsonotron-js
        npm version ${{ steps.prepare.outputs.releaseVersion }}
        npm run build
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.npm_token}}
    - name: Publish jsonotron-codegen
      if: steps.prepare.outputs.canRelease == 'yes'
      run: |
        cd workspaces/jsonotron-codegen
        npm version ${{ steps.prepare.outputs.releaseVersion }}
        npm run build
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.npm_token}}
    - name: Publish jsonoserve
      if: steps.prepare.outputs.canRelease == 'yes'
      run: |
        cd workspaces/jsonoserve
        npm version ${{ steps.prepare.outputs.releaseVersion }}
        npm run build
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.npm_token}}
    - name: Publish jsonocli
      if: steps.prepare.outputs.canRelease == 'yes'
      run: |
        cd workspaces/jsonocli
        npm version ${{ steps.prepare.outputs.releaseVersion }}
        npm install jsonotron-codegen@${{ steps.prepare.outputs.releaseVersion }}
        npm run build
        npm publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.npm_token}}
