---
kind: schema
system: test
name: household
examples:
- value:
    location: over the rainbow
    familyMemberCount: 2
    doorColor: RED
    firstName: Mickey
    surname: Mouse
  documentation: An example.
validTestCases:
- location: over the rainbow
  familyMemberCount: 2
  doorColor: RED
invalidTestCases:
- -1
- 0
- 999999
- 
- true
- a house
- {}
- []
- familyMemberCount: 123 # missing location
  doorColor: RED
- location: over the rainbow # invalid door color
  familyMemberCount: 2
  doorColor: PUSE
jsonSchema:
  type: object
  documentation: Information about a family living at one address.
  additionalProperties: false
  properties:
    location:
      type: string
      documentation: Additional field-level documentation that can optionally be supplied.
    familyMemberCount:
      $ref: positiveInteger # local reference
    doorColor:
      $ref: https://jsonotron.org/test/color # fully-qualified reference
    neighbour:
      $ref: household # self-reference
    maritalStatus:
      enum: # enum strings
      - married
      - single
    favDecade:
      enum: # enum floats
      - 2000
      - 2010
    residentInVillage:
      enum: # enum booleans
      - true
      - false
    shoppingPrefs:
      enum: # enum objects
      - fruit: 1
        veg: 2
      - veg: 1
        fruit: 2
    firstName: # test relative uri's
      $ref: ../other/string
    surname: # test-system string type vs JSON schema string type (name clash)
      $ref: https://jsonotron.org/other/string
  required:
  - location
  - familyMemberCount
  - doorColor
