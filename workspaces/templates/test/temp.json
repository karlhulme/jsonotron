{
  "objectTypes": [
    {
      "system": "test",
      "name": "colorData",
      "documentation": "Custom data that is attached to each color enum item.",
      "rootType": true,
      "examples": [],
      "objectTypeArrayCount": 0,
      "properties": [
        {
          "propertyName": "hexCode",
          "documentation": "",
          "refTypeName": "test/colorData_hexCode",
          "isRequired": true
        },
        {
          "propertyName": "isWarningColor",
          "documentation": "",
          "refTypeName": "test/colorData_isWarningColor",
          "isRequired": false
        }
      ]
    },
    {
      "system": "test",
      "name": "bed",
      "documentation": "A bed",
      "rootType": true,
      "examples": [
        {
          "value": {
            "make": "SleepTight",
            "thickness": 25
          },
          "documentation": "An example."
        }
      ],
      "objectTypeArrayCount": 0,
      "properties": [
        {
          "propertyName": "make",
          "documentation": "The make of the bed.",
          "refTypeName": "test/bed_make",
          "isRequired": true
        },
        {
          "propertyName": "thickness",
          "documentation": "The thickness of the bed mattress",
          "refTypeName": "test/bed_thickness",
          "isRequired": false
        },
        {
          "propertyName": "pillow",
          "documentation": "The type of pillow on the bed",
          "refTypeName": "test/bed_pillow",
          "isRequired": false
        },
        {
          "propertyName": "direction",
          "documentation": "The direction the bed is facing.",
          "refTypeName": "test/bed_direction",
          "isRequired": false
        }
      ]
    },
    {
      "system": "test",
      "name": "pillow",
      "documentation": "A pillow",
      "rootType": true,
      "examples": [
        {
          "value": {
            "make": "SleepTight",
            "color": "blue"
          },
          "documentation": "An example."
        }
      ],
      "objectTypeArrayCount": 0,
      "properties": [
        {
          "propertyName": "make",
          "documentation": "The make of the pillow.",
          "refTypeName": "test/pillow_make",
          "isRequired": true
        },
        {
          "propertyName": "color",
          "documentation": "The color of the pillow.",
          "refTypeName": "test/pillow_color",
          "isRequired": false
        }
      ]
    },
    {
      "system": "test",
      "name": "drawer_arrayOfObjects",
      "documentation": "The drawer_arrayOfObjects type.",
      "rootType": false,
      "examples": [],
      "objectTypeArrayCount": 1,
      "properties": [
        {
          "propertyName": "a",
          "documentation": "",
          "refTypeName": "test/drawer_arrayOfObjects_a",
          "isRequired": false
        },
        {
          "propertyName": "b",
          "documentation": "",
          "refTypeName": "test/drawer_arrayOfObjects_b",
          "isRequired": false
        }
      ]
    },
    {
      "system": "test",
      "name": "drawer",
      "documentation": "The drawer type.",
      "rootType": true,
      "examples": [
        {
          "value": {
            "instructions": {
              "any": "thing"
            },
            "compact": true,
            "fabrics": "plaid",
            "contents": [
              "batteries",
              "clothes"
            ]
          },
          "documentation": "An example."
        }
      ],
      "objectTypeArrayCount": 0,
      "properties": [
        {
          "propertyName": "instructions",
          "documentation": "",
          "refTypeName": "test/drawer_instructions",
          "isRequired": false
        },
        {
          "propertyName": "compact",
          "documentation": "",
          "refTypeName": "test/drawer_compact",
          "isRequired": false
        },
        {
          "propertyName": "fabrics",
          "documentation": "",
          "refTypeName": "test/drawer_fabrics",
          "isRequired": false
        },
        {
          "propertyName": "enumNumbers",
          "documentation": "",
          "refTypeName": "test/drawer_enumNumbers",
          "isRequired": false
        },
        {
          "propertyName": "enumBoolean",
          "documentation": "",
          "refTypeName": "test/drawer_enumBoolean",
          "isRequired": false
        },
        {
          "propertyName": "enumObjects",
          "documentation": "",
          "refTypeName": "test/drawer_enumObjects",
          "isRequired": false
        },
        {
          "propertyName": "arrayOfStrings",
          "documentation": "",
          "refTypeName": "test/drawer_arrayOfStrings",
          "isRequired": false
        },
        {
          "propertyName": "arrayOfObjects",
          "documentation": "",
          "refTypeName": "test/drawer_arrayOfObjects",
          "isRequired": false
        },
        {
          "propertyName": "age",
          "documentation": "The age in years.",
          "refTypeName": "test/drawer_age",
          "isRequired": false
        }
      ]
    },
    {
      "system": "test",
      "name": "drawerBasedOnIncludes",
      "documentation": "The drawerBasedOnIncludes type.",
      "rootType": true,
      "examples": [],
      "objectTypeArrayCount": 0,
      "properties": [
        {
          "propertyName": "instructions",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnIncludes_instructions",
          "isRequired": false
        },
        {
          "propertyName": "compact",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnIncludes_compact",
          "isRequired": false
        },
        {
          "propertyName": "fabrics",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnIncludes_fabrics",
          "isRequired": false
        }
      ]
    },
    {
      "system": "test",
      "name": "drawerBasedOnExcludes",
      "documentation": "The drawerBasedOnExcludes type.",
      "rootType": true,
      "examples": [],
      "objectTypeArrayCount": 0,
      "properties": [
        {
          "propertyName": "instructions",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnExcludes_instructions",
          "isRequired": false
        },
        {
          "propertyName": "compact",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnExcludes_compact",
          "isRequired": false
        },
        {
          "propertyName": "fabrics",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnExcludes_fabrics",
          "isRequired": false
        },
        {
          "propertyName": "enumNumbers",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnExcludes_enumNumbers",
          "isRequired": false
        },
        {
          "propertyName": "enumBoolean",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnExcludes_enumBoolean",
          "isRequired": false
        },
        {
          "propertyName": "enumObjects",
          "documentation": "",
          "refTypeName": "test/drawerBasedOnExcludes_enumObjects",
          "isRequired": false
        }
      ]
    },
    {
      "system": "extra",
      "name": "table",
      "documentation": "A table.",
      "rootType": true,
      "examples": [
        {
          "value": {
            "height": 123
          },
          "documentation": "An example."
        }
      ],
      "objectTypeArrayCount": 0,
      "properties": [
        {
          "propertyName": "height",
          "documentation": "",
          "refTypeName": "extra/table_height",
          "isRequired": false
        }
      ]
    }
  ],
  "refTypes": [
    {
      "system": "test",
      "name": "color",
      "documentation": "A list of colors",
      "rootType": true,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": false,
      "isEnumRef": true,
      "enumItems": [
        {
          "value": "1red",
          "text": "Red",
          "documentation": "The color for errors",
          "data": {
            "hexCode": "f00",
            "isWarningColor": true
          }
        },
        {
          "value": "2green",
          "text": "Green",
          "data": {
            "hexCode": "0f0"
          }
        }
      ],
      "enumItemDataTypeName": "colorData"
    },
    {
      "system": "test",
      "name": "colorData_hexCode",
      "documentation": "A scalar type based on string.",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "colorData_isWarningColor",
      "documentation": "A scalar type based on boolean.",
      "rootType": false,
      "examples": [],
      "refTypeName": "boolean",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "size",
      "documentation": "A list of sizes",
      "rootType": true,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": false,
      "isEnumRef": true,
      "enumItems": [
        {
          "value": "regular",
          "text": "Regular",
          "symbol": "M"
        },
        {
          "value": "large",
          "text": "Large",
          "symbol": "L"
        },
        {
          "value": "xlarge",
          "text": "Extra Large",
          "deprecated": "Cannot source anymore."
        }
      ]
    },
    {
      "system": "test",
      "name": "numbersList",
      "documentation": "A list of numbers",
      "rootType": true,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": false,
      "isEnumRef": true,
      "enumItems": [
        {
          "value": "1",
          "text": "1 One"
        },
        {
          "value": "2",
          "text": "2 Two"
        },
        {
          "value": "3",
          "text": "3 Three"
        }
      ]
    },
    {
      "system": "alt",
      "name": "direction",
      "documentation": "A list of directions (in an alternative system).",
      "rootType": true,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": false,
      "isEnumRef": true,
      "enumItems": [
        {
          "value": "going/up",
          "text": "Up"
        },
        {
          "value": "going/down",
          "text": "Down"
        },
        {
          "value": "goingAround",
          "text": "Around"
        }
      ]
    },
    {
      "system": "test",
      "name": "bed_make",
      "documentation": "A reference to the extra/hugeString type.",
      "rootType": false,
      "examples": [],
      "refTypeName": "extra/hugeString",
      "refTypeArrayCount": 0,
      "isScalarRef": false,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "bed_thickness",
      "documentation": "The thickness of the bed mattress",
      "rootType": false,
      "examples": [],
      "refTypeName": "number",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "bed_pillow",
      "documentation": "A reference to the test/pillow type.",
      "rootType": false,
      "examples": [],
      "refTypeName": "test/pillow",
      "refTypeArrayCount": 0,
      "isScalarRef": false,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "bed_direction",
      "documentation": "A reference to the alt/direction type.",
      "rootType": false,
      "examples": [],
      "refTypeName": "alt/direction",
      "refTypeArrayCount": 0,
      "isScalarRef": false,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "pillow_make",
      "documentation": "The make of the pillow.",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "pillow_color",
      "documentation": "The color of the pillow.",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_instructions",
      "documentation": "The fallback type because the JSON schema was not understood.",
      "rootType": false,
      "examples": [],
      "refTypeName": "object",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_compact",
      "documentation": "A scalar type based on boolean.",
      "rootType": false,
      "examples": [],
      "refTypeName": "boolean",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_fabrics",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_enumNumbers",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "number",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_enumBoolean",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "boolean",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_enumObjects",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "object",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_arrayOfStrings",
      "documentation": "A scalar type based on string.",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 1,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_arrayOfObjects_a",
      "documentation": "A scalar type based on string.",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_arrayOfObjects_b",
      "documentation": "A scalar type based on string.",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawer_age",
      "documentation": "The age in years.",
      "rootType": false,
      "examples": [],
      "refTypeName": "integer",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnIncludes_instructions",
      "documentation": "The fallback type because the JSON schema was not understood.",
      "rootType": false,
      "examples": [],
      "refTypeName": "object",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnIncludes_compact",
      "documentation": "A scalar type based on boolean.",
      "rootType": false,
      "examples": [],
      "refTypeName": "boolean",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnIncludes_fabrics",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnExcludes_instructions",
      "documentation": "The fallback type because the JSON schema was not understood.",
      "rootType": false,
      "examples": [],
      "refTypeName": "object",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnExcludes_compact",
      "documentation": "A scalar type based on boolean.",
      "rootType": false,
      "examples": [],
      "refTypeName": "boolean",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnExcludes_fabrics",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnExcludes_enumNumbers",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "number",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnExcludes_enumBoolean",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "boolean",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "test",
      "name": "drawerBasedOnExcludes_enumObjects",
      "documentation": "A bespoke enum type",
      "rootType": false,
      "examples": [],
      "refTypeName": "object",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "extra",
      "name": "table_height",
      "documentation": "A scalar type based on number.",
      "rootType": false,
      "examples": [],
      "refTypeName": "number",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "extra",
      "name": "hugeString",
      "documentation": "A large string with a defined length.",
      "rootType": true,
      "examples": [
        {
          "value": "A really really big string",
          "documentation": "An example."
        }
      ],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    },
    {
      "system": "extra",
      "name": "mediumString",
      "documentation": "A medium string with a defined length.",
      "rootType": true,
      "examples": [
        {
          "value": "A medium length string",
          "documentation": "An example."
        }
      ],
      "refTypeName": "string",
      "refTypeArrayCount": 0,
      "isScalarRef": true,
      "isEnumRef": false
    }
  ]
}